
수업기간: 2025-07-1 ~ 2025-07-25
수업시간: 아침 10 ~ 오후 2시 (하루 4시간)
수업진행: 50분수업(실습및 설명),  10분휴식
진행강사: 김영임

https://github.com/posasi2000/baewha2.git
https://www.dataq.or.kr

테이터베이스 개체 설명
1) Table : 행과열로 구성된 기본적인 테이타 저장개체
2) View :  테이블로부터 테이타의 부분집합을 논리적으로 표현한 개체
3) Sequence : 순차적인 숫자값을 생성하는 개체
4) index : 질의 성능을 향상하기 위해 사용하는 개체
5) Synonym : 개체이름에 대한 동의어(별명=닉네임)
6) Procedure : PL/SQL 프로시저
7) Function :  SQL사용자정의 함수  return키워드 있음 
8) trigger : 쿼리문을 자동실행  테이블이름 기술할때 ~~ on emp01


7월23일 수요일 수업내용 
 ㄴ1교시  데이터분석함수는  80% over() 같이 기술 
 ㄴ2교시  데이터분석함수 
 ㄴ3교시  데이터분석함수 
 ㄴ4교시  제약조건, null처리 


윈도우시작아이콘 클릭후  cmd
윈도우시작아이콘 + R(run) 

C:\Users\여러분컴퓨터이름>  sqlplus system/1234
SQL> show user ;
     USER is "SYSTEM"  

set linesize 3400   -- 한 줄에 최대 3400자까지 출력
set pagesize 3400   -- 각 페이지마다 최대 3400행이 표시되도록 설정 

★ 객체대상 참고
 select  username from  dba_users ;
 select  username from  all_users ;
 select  table_name     from    user_tables ;
 select  sequence_name  from    user_sequences ; 
 select  constraint_name from    user_constraints ;
 select  view_name  from user_views ;  -- select결과 데이터 기억하는 객체 
 select  synonym_name, table_name  from user_synonyms ;  -- 시노님=동의어는 객체 이름에 대한 동의어  
 select  index_name  from user_indexes  where table_name = 'EMP3' ;
 select  trigger_name from user_triggers ;
 select  procedure_name from user_procedures ;


set linesize 3400  
set pagesize 3400  
col dname for a20
col ename for a10
col loc for a10
col job for a10
col hiredate for a10


★ 1교시  over()요술만능해결사 데이터분석함수 
★ --------------------------------------------------------------------------------------
SQL>  select empno, ename,  sal ,
      rank()   over( order by sal desc)  "rank" ,
      cume_dist()  over(order by sal desc)  "cume_dist" 
      from emp ; 

    -- 데이터분석함수 순위의비율 출력 cume_dist  0~1사이 숫자를 실수값으로 표시 
     EMPNO ENAME        SAL       rank       cume_dist
---------- ---------- ----- ----------       ----------
 1/14     7839 KING        5000           1   .071428571
 3/14     7902 FORD        3000           2   .214285714
 3/14     7788 SCOTT       3000           2   .214285714
 4/14     7566 JONES       2975           4   .285714286
 5/15     7698 BLAKE       2850           5   .357142857
 6/14     7782 CLARK       2450           6   .428571429
 7/14     7499 ALLEN       1600           7          .5
 8/14     7844 TURNER      1500           8   .571428571
 9/14     7934 MILLER      1300           9   .642857143
 11/14     7521 WARD        1250          10  .785714286
 11/14      7654 MARTIN      1250         10  .785714286
 12/14      7876 ADAMS       1100         12  .857142857
 13/14      7900 JAMES        950         13  .928571429
 14/14      7369 SMITH        800         14          1
14 rows selected.


SQL> select empno, ename, job, sal,
     rank() over(order by sal desc) "rank"  from emp ;  -- 여러번실습해서 확인
     EMPNO ENAME      JOB               SAL       rank
---------- ---------- ---------- ---------- ----------
      7839 KING       PRESIDENT        5000          1
      7902 FORD       ANALYST          3000          2
      7788 SCOTT      ANALYST          3000          2
      7566 JONES      MANAGER          2975          4
      7698 BLAKE      MANAGER          2850          5
      7782 CLARK      MANAGER          2450          6
      7499 ALLEN      SALESMAN         1600          7
      7844 TURNER     SALESMAN         1500          8
      7934 MILLER     CLERK            1300          9
      7521 WARD       SALESMAN         1250         10
      7654 MARTIN     SALESMAN         1250         10
      7876 ADAMS      CLERK            1100         12
      7900 JAMES      CLERK             950         13
      7369 SMITH      CLERK             800         14
14 rows selected.


-- rank() over( partition b*y job* ~~ )
SQL>  select job, ename, sal,
    rank() over(partition by job order by sal desc) as rank  from  emp ;
JOB        ENAME             SAL       RANK
---------- ---------- ---------- ----------
ANALYST    FORD             3000          1
ANALYST    SCOTT            3000          1
CLERK      MILLER           1300          1
CLERK      ADAMS            1100          2
CLERK      JAMES             950          3
CLERK      SMITH             800          4
MANAGER    JONES            2975          1
MANAGER    BLAKE            2850          2
MANAGER    CLARK            2450          3
PRESIDENT  KING             5000          1
SALESMAN   ALLEN            1600          1
SALESMAN   TURNER           1500          2
SALESMAN   MARTIN           1250          3
SALESMAN   WARD             1250          3
14 rows selected.

set linesize 3400  
set pagesize 3400  
col dname for a20
col ename for a10
col loc for a10
col job for a10
col hiredate for a10

-- 데이터분석함수   sum() ~ over (복잡 between and ) 시험 
 SQL>  select empno, ename, sal ,
 sum(sal) over(order by empno rows  between unbounded preceding and current row)  "누적"
 from emp ;
     EMPNO ENAME             SAL       누적
---------- ---------- ---------- ----------
      7369 SMITH             800        800
      7499 ALLEN            1600       2400
      7521 WARD             1250       3650
      7566 JONES            2975       6625
      7654 MARTIN           1250       7875
      7698 BLAKE            2850      10725
      7782 CLARK            2450      13175
      7788 SCOTT            3000      16175
      7839 KING             5000      21175
      7844 TURNER           1500      22675
      7876 ADAMS            1100      23775
      7900 JAMES             950      24725
      7902 FORD             3000      27725
      7934 MILLER           1300      29025


SQL> clear screen ;  -- sum() ~ over (단순 ) 
 select empno, ename, sal, sum(sal) over(order by sal asc) "누적"  from emp ;
     EMPNO ENAME             SAL       누적
---------- ---------- ---------- ----------
      7369 SMITH             800        800
      7900 JAMES             950       1750
      7876 ADAMS            1100       2850
      7521 WARD             1250       5350
      7654 MARTIN           1250       5350
      7934 MILLER           1300       6650
      7844 TURNER           1500       8150
      7499 ALLEN            1600       9750
      7782 CLARK            2450      12200
      7698 BLAKE            2850      15050
      7566 JONES            2975      18025
      7788 SCOTT            3000      24025
      7902 FORD             3000      24025
      7839 KING             5000      29025


-- 등수 rank, dense_rank비교
SQL> select empno,ename,sal, rank() over(order by sal)  "rank"  from emp ;
     EMPNO ENAME             SAL       rank
---------- ---------- ---------- ----------
      7369 SMITH             800          1
      7900 JAMES             950          2
      7876 ADAMS            1100          3
      7521 WARD             1250          4
      7654 MARTIN           1250          4
      7934 MILLER           1300          6
      7844 TURNER           1500          7
      7499 ALLEN            1600          8
      7782 CLARK            2450          9
      7698 BLAKE            2850         10
      7566 JONES            2975         11
      7788 SCOTT            3000         12
      7902 FORD             3000         12
      7839 KING             5000         14


SQL> select empno,ename,sal, dense_rank() over(order by sal desc) "dense_rank" from emp ;
     EMPNO ENAME             SAL dense_rank
---------- ---------- ---------- ----------
      7839 KING             5000          1
      7902 FORD             3000          2
      7788 SCOTT            3000          2
      7566 JONES            2975          3
      7698 BLAKE            2850          4
      7782 CLARK            2450          5
      7499 ALLEN            1600          6
      7844 TURNER           1500          7
      7934 MILLER           1300          8
      7521 WARD             1250          9
      7654 MARTIN           1250          9
      7876 ADAMS            1100         10
      7900 JAMES             950         11
      7369 SMITH             800         12


SQL> select empno, ename, sal,
      rank() over(order by sal desc) "rank" ,
      dense_rank() over(order by sal desc) "dense" ,
      row_number() over(order by sal desc) "번호"
      from emp   where deptno = 20 ;
     EMPNO ENAME             SAL       rank      dense       번호
---------- ---------- ---------- ---------- ---------- ----------
      7788 SCOTT            3000          1          1          1
      7902 FORD             3000          1          1          2
      7566 JONES            2975          3          2          3
      7876 ADAMS            1100          4          3          4
      7369 SMITH             800          5          4          5



SQL> select rownum, empno, ename,job, sal from emp  order by sal desc ;
    ROWNUM      EMPNO ENAME      JOB               SAL
---------- ---------- ---------- ---------- ----------
         9       7839 KING       PRESIDENT        5000
        13       7902 FORD       ANALYST          3000
         8       7788 SCOTT      ANALYST          3000
         4       7566 JONES      MANAGER          2975
         6       7698 BLAKE      MANAGER          2850
         7       7782 CLARK      MANAGER          2450
         2       7499 ALLEN      SALESMAN         1600
        10       7844 TURNER     SALESMAN         1500
        14       7934 MILLER     CLERK            1300
         3       7521 WARD       SALESMAN         1250
         5       7654 MARTIN     SALESMAN         1250
        11       7876 ADAMS      CLERK            1100
        12       7900 JAMES      CLERK             950
         1       7369 SMITH      CLERK             800


-- rownum 불편한순서를  row_number() over() 대체하면 편해요
SQL> select rownum, empno, ename, job, sal, row_number() over( order by sal desc) "num"  from emp  ;
    ROWNUM      EMPNO ENAME      JOB               SAL        num
---------- ---------- ---------- ---------- ---------- ----------
         9       7839 KING       PRESIDENT        5000          1
        13       7902 FORD       ANALYST          3000          2
         8       7788 SCOTT      ANALYST          3000          3
         4       7566 JONES      MANAGER          2975          4
         6       7698 BLAKE      MANAGER          2850          5
         7       7782 CLARK      MANAGER          2450          6
         2       7499 ALLEN      SALESMAN         1600          7
        10       7844 TURNER     SALESMAN         1500          8
        14       7934 MILLER     CLERK            1300          9
         3       7521 WARD       SALESMAN         1250         10
         5       7654 MARTIN     SALESMAN         1250         11
        11       7876 ADAMS      CLERK            1100         12
        12       7900 JAMES      CLERK             950         13
         1       7369 SMITH      CLERK             800         14


SQL> select row_number() over(order by sal desc) "num" , empno, ename, job, sal  from emp ;
       num      EMPNO ENAME      JOB          SAL
---------- ---------- ---------- ---------- -----
         1       7839 KING       PRESIDENT   5000
         2       7902 FORD       ANALYST     3000
         3       7788 SCOTT      ANALYST     3000
         4       7566 JONES      MANAGER     2975
         5       7698 BLAKE      MANAGER     2850
         6       7782 CLARK      MANAGER     2450
         7       7499 ALLEN      SALESMAN    1600
         8       7844 TURNER     SALESMAN    1500
         9       7934 MILLER     CLERK       1300
        10       7521 WARD       SALESMAN    1250
        11       7654 MARTIN     SALESMAN    1250
        12       7876 ADAMS      CLERK       1100
        13       7900 JAMES      CLERK        950
        14       7369 SMITH      CLERK        800

-- 본인급여/전체급여  deptno=20인사람 
SQL> select sum(sal) from emp  ;
  	SUM(SAL)
	----------
     	29025


SQL> select * from emp where deptno = 20 ;
     EMPNO ENAME      JOB               MGR HIREDATE          SAL       COMM     DEPTNO
---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
      7369 SMITH      CLERK            7902 80/12/17          800                    20
      7566 JONES      MANAGER          7839 81/04/02         2975         30         20
      7788 SCOTT      ANALYST          7566 82/10/09         3000                    20
      7876 ADAMS      CLERK            7788 83/01/12         1100                    20
      7902 FORD       ANALYST          7566 84/11/05         3000                    20


SQL> select sum(sal) from emp where deptno=20 ;
	 SUM(SAL)
        ----------
     	 10875


-- ratio비율의뜻_to_report =  sal/sum(sal) 같은결과
SQL> select empno, ename, sal ,
    ratio_to_report(sal) over( ) "비율" from emp ;

     EMPNO ENAME                       SAL       비율
---------- -------------------- ---------- ----------
      7369 SMITH                       800 .027562446
      7499 ALLEN                      1600 .055124892
      7521 WARD                       1250 .043066322
      7566 JONES                      2975 .102497847
      7654 MARTIN                     1250 .043066322
      7698 BLAKE                      2850 .098191214
      7782 CLARK                      2450 .084409991
      7788 SCOTT                      3000 .103359173
      7839 KING                       5000 .172265289
      7844 TURNER                     1500 .051679587
      7876 ADAMS                      1100 .037898363
      7900 JAMES                       950 .032730405
      7902 FORD                       3000 .103359173
      7934 MILLER                     1300 .044788975
14 rows selected.


SQL> select empno, ename, sal, ratio_to_report(sal) over( )  "비율"
     from  emp where deptno = 20 ;
     		EMPNO   ENAME        SAL        비율
----------   ---------- -----      ----------
 800/10875     7369   SMITH         800   	.073563218
 2975/10875    7566   JONES        2975	 	.273563218
 3000/10875    7788   SCOTT        3000 	.275862069
 1100/10875     7876   ADAMS       1100 	.101149425
 3000/10875     7902   FORD        3000 	.275862069


--  sal/sum(sal) = ratio비율의뜻_to_report 같은결과
SQL>  select empno, ename, sal, sal/sum(sal) over() as "비율"
      from emp where deptno = 20 ;
    		 EMPNO ENAME             SAL       비율
---------- ---------- ----------   ----------
 800/10875       7369 SMITH             800	 .073563218
 2975/10875      7566 JONES            2975 	.273563218
 3000/10875     7788 SCOTT             3000 	.275862069
 1100/10875      7876 ADAMS            1100 	.101149425
 3000/10875      7902 FORD             3000 	.275862069



SQL> select rownum, empno, ename, job, sal  from emp  order by sal desc ; -- 에러아님
SQL> select rownum, empno, ename, job, sal, row_number() over( order by sal desc) "num"  from emp  ;

    ROWNUM      EMPNO ENAME      JOB               SAL
---------- ---------- ---------- ---------- ----------
         9       7839 KING       PRESIDENT        5000
        13       7902 FORD       ANALYST          3000
         8       7788 SCOTT      ANALYST          3000
         4       7566 JONES      MANAGER          2975
         6       7698 BLAKE      MANAGER          2850
         7       7782 CLARK      MANAGER          2450
         2       7499 ALLEN      SALESMAN         1600
        10       7844 TURNER     SALESMAN         1500
        14       7934 MILLER     CLERK            1300
         3       7521 WARD       SALESMAN         1250
         5       7654 MARTIN     SALESMAN         1250
        11       7876 ADAMS      CLERK            1100
        12       7900 JAMES      CLERK             950
         1       7369 SMITH      CLERK             800
14 rows selected.



set linesize 3400  
set pagesize 3400  
col dname for a20
col ename for a10
col loc for a10
col job for a10
col hiredate for a10
col msg for a30 ;  -- 꼭 지정해야 아래처럼 보기좋게 나와요


-- 시퀀스 옵션
INCREMENT BY : 시퀀스 실행 시 증가시킬 값
START WITH : 시퀀스의 시작값이다. (MINVALUE과 같거나 커야 한다)
MINVALUE : 시퀀스가 시작되는 최소값이다.
MAXVALUE : 시퀀스가 끝나는 최대값이다. 
NOCYCLE | CYCLE : NOCYCLE (반복안함), CYCLE(시퀀스의 최대값에 도달 시 최소값 1부터 다시시작)
NOCACHE | CACHE : NOCACHE(사용안함), CACHE(캐시를 사용하여 미리 값을 할당해 놓아서 속도가 빠르며, 동시 사용자가 많을 경우 유리)
NOORDER | ORDER : NOORDER(사용안함), ORDER(요청 순서로 값을 생성하여 발생 순서를 보장하지만 조금의 시스템 부하가 있음)

-- 시퀀스 순차번호 = 일련번호 발생  start with 1부터 시작
SQL> drop sequence  test_seq ;  
SQL> create sequence  test_seq  increment by 1 start with 1 nocycle nocache noorder;
SQL> select sequence_name  from user_sequences; 



-- level KING대표가 제일높은 1레벨 관계 순위 설정  start with  컬럼 = '최상위데이터'  & 시퀀스 생성 키워드 연결해서 외우세요
SQL> select max(level)  from emp  start with ename='KING' ;
	ERROR at line 1:
	에러이유CONNECT BY clause required in this query block


SQL> select max(level)  from emp  start with ename='KING'
     connect by prior empno = mgr ;
	MAX(LEVEL)
	----------
          4

SQL> select ename, sal, job, level, mgr
     from emp   start with ename='KING'
     connect by prior empno = mgr;


col info for a30 ;
col msg for a30 ;  -- 꼭 지정해야 아래처럼 보기좋게 나와요
SQL> select rpad( ' ', level*5) ||ename  msg, level, sal, job
    from emp
    start with ename='KING'
    connect by prior empno = mgr;

MSG                                 LEVEL   SAL JOB
------------------------------ ---------- ----- ----------
     KING                               1  5000 PRESIDENT
          JONES                         2  2975 MANAGER
               SCOTT                    3  3000 ANALYST
                    ADAMS               4  1100 CLERK
               FORD                     3  3000 ANALYST
                    SMITH               4   800 CLERK
          BLAKE                         2  2850 MANAGER
               ALLEN                    3  1600 SALESMAN
               WARD                     3  1250 SALESMAN
               MARTIN                   3  1250 SALESMAN
               TURNER                   3  1500 SALESMAN
               JAMES                    3   950 CLERK
          CLARK                         2  2450 MANAGER
               MILLER                   3  1300 CLERK
14 행이 선택되었습니다.

SQL> select rpad( ' ', level*5) ||ename  msg, sal, job
    from emp
    start with ename='KING'
    connect by prior empno = mgr;


★ 2교시  데이터분석함수 
★ --------------------------------------------------------------------------------------

-- deptno부서별합계 그룹화
SQL> select job, sum(sal) as total from emp  group by job ;
	JOB             TOTAL
	---------- ----------
	CLERK            4150
	SALESMAN         5600
	PRESIDENT        5000
	MANAGER          8275
	ANALYST          6000


SQL> select  avg(sum(sal)) "total"  from emp  group by job ;
     total
     ----------
      5805

-- 긴문장을 축약절 with  명명한이름   as ( )
SQL> with job_sumsal  as (select job, sum(sal) as total from emp group by job )
  select job, total from  job_sumsal
  where  total > ( select avg(total) from  job_sumsal) ;
	JOB             TOTAL
	---------- ----------
	MANAGER          8275
	ANALYST          6000


SQL> with job_sumsal as (select job, sum(sal) as total from emp group by job)
     select job, total  from job_sumsal
      where total > (select avg(total) from job_sumsal ) ;


SQL> select  avg(sum(sal))  from emp  ;
	ERROR at line 1:
	에러이유: nested group function without GROUP BY


SQL> select  avg(sum(sal)) "total"  from emp  group by job;
    	 TOTAL
	----------
      	5805

 --  5805 + 3000 = 8805 아래처리
SQL> select  avg(sum(sal))+3000  "total"  from emp  group by job ;
     	TOTAL
	----------
      	8805

SQL> select deptno, sum(sal)  "total"  from emp   group by deptno ;
   	 DEPTNO      TOTAL
	---------- ----------
        30       9400
        20      10875
        10       8750


--  with deptno_sumsal 긴문장절 만들기  avg(sum(sal))+3000 = 위쪽결과값확인  8805
 with deptno_sumsal  as (
    select deptno, sum(sal) total from  emp 
    group by deptno having sum(sal) > (select avg(sum(sal))+ 3000  from emp group by job)
  ) select deptno, total  from  deptno_sumsal ;

    DEPTNO      TOTAL
---------- ----------
        30       9400
        20      10875


php, java기본 jsp/servlet/spring, python기본 django,flask  + 연결디비(mysql, sqlite3, oracle)
 ㄴ 게시판, 방명록, 쇼핑몰 , 사용자로그인  구현의 기본 crud
crud = create, read, update, delete ===> SQL언어적용 create=insert, read=select , update, delete
select구문으로 join/subquery/group by/order by/where ~~~~

-- with축약식 2개 사용  
 with job_sumsal as (select job, sum(sal) as total from emp group by job) ,
    deptno_sumsal as (
      select deptno, sum(sal)  total from  emp
      group by deptno having sum(sal) > (select avg(total) + 3000 from job_sumsal)
    ) select deptno, total  from deptno_sumsal ;
    DEPTNO      TOTAL
---------- ----------
        30       9400
        20      10875


-- with절 없이 아래처럼 기술 가능 
SQL>  select deptno, sum(sal) as total from emp
      group by deptno
      having sum(sal) > (select avg(sum(sal))+3000 from emp group by job) ;
    DEPTNO      TOTAL
---------- ----------
        30       9400
        20      10875


★ 3교시  데이터분석함수 
★ --------------------------------------------------------------------------------------
-- group by절, rollup절, cube절 복습
SQL> select job, sum(sal)  from emp  group by job ;
	JOB          SUM(SAL)
	---------- ----------
	CLERK            4150
	SALESMAN         5600
	PRESIDENT        5000
	MANAGER          8275
	ANALYST          6000


SQL> select job, sum(sal)   from emp  group by rollup(job) ;
	JOB          SUM(SAL)
	---------- ----------
	ANALYST          6000
	CLERK            4150
	MANAGER          8275
	PRESIDENT        5000
	SALESMAN         5600
                	29025


SQL> select deptno, job, sum(sal)   from emp
     group by rollup( deptno, job) order by 1 ;

    DEPTNO JOB          SUM(SAL)
---------- ---------- ----------
        10 CLERK            1300
        10 MANAGER          2450
        10 PRESIDENT        5000
        10                  8750

        20 ANALYST          6000
        20 CLERK            1900
        20 MANAGER          2975
        20                 10875

        30 CLERK             950
        30 MANAGER          2850
        30 SALESMAN         5600
        30                  9400
                           29025


SQL> select job, sum(sal)  from emp  group by cube(job) ;
	JOB          SUM(SAL)
	---------- ----------
                29025
	CLERK            4150
	ANALYST          6000
	MANAGER          8275
	SALESMAN         5600
	PRESIDENT        5000



SQL> select deptno, job, sum(sal)  from emp  group by cube(deptno, job) ;
    DEPTNO JOB          SUM(SAL)
---------- ---------- ----------
                           29025
           CLERK            4150
           ANALYST          6000
           MANAGER          8275
           SALESMAN         5600
           PRESIDENT        5000
        10                  8750
        10 CLERK            1300
        10 MANAGER          2450
        10 PRESIDENT        5000
        20                 10875
        20 CLERK            1900
        20 ANALYST          6000
        20 MANAGER          2975
        30                  9400
        30 CLERK             950
        30 MANAGER          2850
        30 SALESMAN         5600


SQL> select deptno, job, sum(sal)  from emp  group by cube(deptno, job)  order by 1 ;
    DEPTNO JOB          SUM(SAL)
---------- ---------- ----------
        10 CLERK            1300
        10 MANAGER          2450
        10 PRESIDENT        5000
        10                  8750
        20 ANALYST          6000
        20 CLERK            1900
        20 MANAGER          2975
        20                 10875
        30 CLERK             950
        30 MANAGER          2850
        30 SALESMAN         5600
        30                  9400
           ANALYST          6000
           CLERK            4150
           MANAGER          8275
           PRESIDENT        5000
           SALESMAN         5600
                           29025



★ 쉬어가는 코너 복습 
★ --------------------------------------------------------------------------------------
부서별 평균출력 to_char변환함수 round함수, 3자릿수에 콤마표시,  화폐단위 우리나라
복습1] 
SQL> select deptno, to_char(round(avg(sal),2), '99,999.00') "표시" from emp
      group by deptno  order by deptno;
    DEPTNO 표시
---------- --------------------
        10   2,916.67
        20   2,175.00
        30   1,566.67


복습2] 
SQL> select deptno, to_char(round(avg(sal),2), 'L99,999') 결과 from emp
     group by deptno  order by deptno ;
    DEPTNO 	결과
---------- ----------------
       10          ￦2,917
       20          ￦2,175
       30          ￦1,567


SQL> select ename, job, sal, comm, deptno from emp  
     where deptno = 30  order by  comm ; 
ENAME      JOB               SAL       COMM     DEPTNO
---------- ---------- ---------- ---------- ----------
TURNER     SALESMAN         1500          0         30
WARD       SALESMAN         1250        200         30
ALLEN      SALESMAN         1600        300         30
MARTIN     SALESMAN         1250        300         30
JAMES      CLERK             950                    30
BLAKE      MANAGER          2850                    30


SQL>  select ename, job, sal, comm, deptno  from  emp
      where deptno = 30  order by comm  nulls last ;
ENAME      JOB               SAL       COMM     DEPTNO
---------- ---------- ---------- ---------- ----------
TURNER     SALESMAN         1500          0         30
WARD       SALESMAN         1250        200         30
ALLEN      SALESMAN         1600        300         30
MARTIN     SALESMAN         1250        300         30
JAMES      CLERK             950                    30
BLAKE      MANAGER          2850                    30


--  널데이터가 first 먼저 표시 
SQL>  select ename, job, sal, comm, deptno   from emp
      where deptno = 30   order by  comm  nulls first  ;
ENAME      JOB               SAL       COMM     DEPTNO
---------- ---------- ---------- ---------- ----------
JAMES      CLERK             950                    30
BLAKE      MANAGER          2850                    30
TURNER     SALESMAN         1500          0         30
WARD       SALESMAN         1250        200         30
ALLEN      SALESMAN         1600        300         30
MARTIN     SALESMAN         1250        300         30

SQL>  select ename, job, sal, comm, deptno   from emp
      where deptno = 30   order by  comm  desc  nulls first  ;
ENAME      JOB               SAL       COMM     DEPTNO
---------- ---------- ---------- ---------- ----------
JAMES      CLERK             950                    30
BLAKE      MANAGER          2850                    30
ALLEN      SALESMAN         1600        300         30
MARTIN     SALESMAN         1250        300         30
WARD       SALESMAN         1250        200         30
TURNER     SALESMAN         1500          0         30





★ 4교시  데이터분석함수 
★ --------------------------------------------------------------------------------------

col my for  a50 ;  -- 기술하면 좋아요
-- listagg  ~ within 가로출력  반드시 group by 기술필수
SQL> select deptno, listagg(ename, ',') 
     within group(order by ename) as my from emp 
     group by deptno ;
  DEPTNO  MY
--------- ----------
  10 	  CLARK,KING,MILLER
  20 	  ADAMS,FORD,JONES,SCOTT,SMITH
  30 	  ALLEN,BLAKE,JAMES,MARTIN,TURNER,WARD



SQL> select job, listagg(ename, ',') 
     within group(order by ename) as my from emp
     group by job ;
  job  		MY
--------- ----------
ANALYST		FORD,SCOTT
CLERK		ADAMS,JAMES,MILLER,SMITH
MANAGER		BLAKE,CLARK,JONES
PRESIDENT	KING
SALESMAN	ALLEN,MARTIN,TURNER,WARD



col my for  a60 ;  -- 기술하면 좋아요
SQL> select job, listagg(ename || '(' ||sal||')', ',') 
     within group(order by ename)  "my" from emp
     group by job ;

  job  		ENAME
--------- ----------
ANALYST		FORD(3000),SCOTT(3000)
CLERK		ADAMS(1100),JAMES(950),MILLER(1300),SMITH(800)
MANAGER		BLAKE(2850),CLARK(2450),JONES(2975)
PRESIDENT	KING(5000)
SALESMAN	ALLEN(1600),MARTIN(1250),TURNER(1500),WARD(1250)



SQL> select empno, ename, job, sal
      from emp  where job in( 'ANALYST', 'MANAGER') ;
     EMPNO ENAME      JOB            SAL
---------- ---------- ------------ -----
      7566 JONES      MANAGER       2975
      7698 BLAKE      MANAGER       2850
      7782 CLARK      MANAGER       2450
      7788 SCOTT      ANALYST       3000
      7902 FORD       ANALYST       3000


-- lag전행, lead다음행 데이터 출력  이전,이후 데이터 표시 
SQL> select empno, ename, job, sal,
       lag(sal,1)  over(order by sal) "전 행" ,
       lead(sal,1) over(order by sal) "다음 행" 
     from emp  where job in( 'ANALYST', 'MANAGER') ;
     EMPNO ENAME      JOB            SAL      전 행    다음 행
---------- ---------- ------------ ----- ---------- ----------
      7782 CLARK      MANAGER       2450       null      2850
      7698 BLAKE      MANAGER       2850       2450       2975
      7566 JONES      MANAGER       2975       2850       3000
      7902 FORD       ANALYST       3000       2975       3000
      7788 SCOTT      ANALYST       3000       3000       null

SQL> select empno, ename, job, sal ,
    lag(sal, 1)  over(order by sal) "이전행" ,
    lead(sal, 1) over(order by sal) "다음행"
    from emp  ;


-- lag전행, lead다음행 데이터 출력  이전,이후 데이터 표시 
select empno, ename, job, hiredate,
     lag(hiredate,1) over(order by hiredate asc) "이전 행 " ,
     lead(hiredate,1) over(order by hiredate asc) "다음 행 " 
 from emp  where job in( 'ANALYST', 'MANAGER') ;
     EMPNO ENAME      JOB        HIREDATE   전 행    다음 행
---------- ---------- ---------- ---------- -------- --------
      7698 BLAKE      MANAGER    81/04/01            81/04/02
      7566 JONES      MANAGER    81/04/02   81/04/01 81/06/01
      7782 CLARK      MANAGER    81/06/01   81/04/02 82/10/09
      7788 SCOTT      ANALYST    82/10/09   81/06/01 84/11/05
      7902 FORD       ANALYST    84/11/05   82/10/09


select sum(sal)  "10" from emp  where deptno = 10 ;
        10
      ----------
       8750

 select sum(sal)  "20" from emp  where deptno = 20 ;
        20
     ----------
      10875

 select sum(sal)  "30" from emp  where deptno = 30 ;
        30
      ----------
       9400

-- decode함수, sum함수 
 select sum(decode(deptno, 10, sal)) as "10" ,
        sum(decode(deptno, 20, sal)) as "20" ,
        sum(decode(deptno, 30, sal)) as "30" 
  from emp ;

        10         20         30
	---------- ---------- ----------
        8750      10875       9400


-- 복습 case ~ end,  decode()

실습] 조건처리 decode () 
   select code, grade,
   decode( grade , 'A', '10', 'B', '10', 'C', '5', 'D', '3', '1') as "결과" 
   from sosi ;

col  grade for a10 ;  -- char(1)라서 열제목공간을 늘려줌
실습] 조건처리 case ~ end 성적처리 축합격및 재시험을 아래 student에서 응용
 select code, grade ,
     case 
        when grade = 'A'   then  '합격'
        when grade = 'B'   then  '합격'
        when grade = 'C'   then  '보통'
        when grade = 'D'   then  '노력'
        else   '재수강'
      end   "결과"
   from sosi;



-- decode함수, sum함수 위쪽에서 실습한 내용
 select sum(decode(deptno, 10, sal)) as "10" ,
        sum(decode(deptno, 20, sal)) as "20" ,
        sum(decode(deptno, 30, sal)) as "30" 
  from emp ;

        10         20         30
	---------- ---------- ----------
        8750      10875       9400


-- decode함수, pivot함수 ~ for 비교 결과는 같음
-- pivot=축 중심으로 회전한다 의미 
SQL> select * from (select deptno , sal from emp)
      pivot(sum(sal) for  deptno in(10,20,30)) ;

         10         20         30
	---------- ---------- ----------
         8750      10875       9400





SQL> select sum(sal)  "MANAGER" from emp  where  job = 'MANAGER'  ;
        MANAGER
      ----------
      8275

 select sum(decode(job, 'ANALYST', sal)) as "ANALYST" ,
	sum(decode(job, 'CLERK', sal)) as "CLERK" ,
	sum(decode(job, 'MANAGER', sal)) as "MANAGER" ,
	sum(decode(job, 'SALESMAN', sal)) as "SALESMAN" 
 from emp ;

   ANALYST      CLERK    MANAGER   SALESMAN
---------- ---------- ---------- ----------
      6000       4150       8275       5600


-- decode함수, pivot함수 비교 결과는 같음
-- pivot=축 중심으로 회전한다 의미 
SQL> select * from (select job , sal from emp)
     pivot(sum(sal) for job in('ANALYST', 'CLERK', 'MANAGER', 'SALESMAN')) ;

   ANALYST      CLERK    MANAGER   SALESMAN
---------- ---------- ---------- ----------
      6000       4150       8275       5600



비권장 SQL> select * from  emp
     pivot(sum(sal) for job in('ANALYST', 'CLERK', 'MANAGER', 'SALESMAN')) ;

  EMPNO ENAME             MGR HIREDATE         COMM     DEPTNO  'ANALYST'    'CLERK'  'MANAGER' 'SALESMAN'
---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
      7521 WARD             7698 81/02/22          200         30                                        1250
      7839 KING                  81/11/17         3500         10
      7782 CLARK            7839 81/06/01                      10                             2450
      7900 JAMES            7698 81/10/03                      30                   950
      7902 FORD             7566 84/11/05                      20       3000
      7876 ADAMS            7788 83/01/12                      20                  1100
      7788 SCOTT            7566 82/10/09                      20       3000
      7566 JONES            7839 81/04/02           30         20                             2975
      7654 MARTIN           7698 81/09/28          300         30                                        1250
      7844 TURNER           7698 81/09/08            0         30                                        1500
      7369 SMITH            7902 80/12/17                      20                   800
      7499 ALLEN            7698 81/02/20          300         30                                        1600
      7698 BLAKE            7839 81/04/01                      30                             2850
      7934 MILLER           7782 82/01/23                      10                  1300



-- 행번호 row_number() ~ over()만능함수
SQL> select row_number() over( order by deptno)  "num" ,
     deptno, empno, ename, job, sal from emp ;

       num     DEPTNO      EMPNO ENAME      JOB               SAL
---------- ---------- ---------- ---------- ---------- ----------
         1         10       7782 CLARK      MANAGER          2450
         2         10       7839 KING       PRESIDENT        5000
         3         10       7934 MILLER     CLERK            1300
         4         20       7566 JONES      MANAGER          2975
         5         20       7902 FORD       ANALYST          3000
         6         20       7876 ADAMS      CLERK            1100
         7         20       7369 SMITH      CLERK             800
         8         20       7788 SCOTT      ANALYST          3000
         9         30       7521 WARD       SALESMAN         1250
        10         30       7844 TURNER     SALESMAN         1500
        11         30       7499 ALLEN      SALESMAN         1600
        12         30       7900 JAMES      CLERK             950
        13         30       7698 BLAKE      MANAGER          2850
        14         30       7654 MARTIN     SALESMAN         1250


-- row_number() over(partition by deptno order by sal desc)
 select deptno, empno,  ename, sal, 
 row_number() over(partition by deptno order by sal desc) "번호" 
 from emp ;
    DEPTNO      EMPNO ENAME             SAL       번호
---------- ---------- ---------- ---------- ----------
        10       7839 KING             5000          1
        10       7782 CLARK            2450          2
        10       7934 MILLER           1300          3
        20       7788 SCOTT            3000          1
        20       7902 FORD             3000          2
        20       7566 JONES            2975          3
        20       7876 ADAMS            1100          4
        20       7369 SMITH             800          5
        30       7698 BLAKE            2850          1
        30       7499 ALLEN            1600          2
        30       7844 TURNER           1500          3
        30       7654 MARTIN           1250          4
        30       7521 WARD             1250          5
        30       7900 JAMES             950          6


-- partition by deptno 기술안하면  1 2 3  4 5 이렇게 나열됨 위쪽에 기술함
SQL> select row_number() over( order by deptno)  "번호" ,
     deptno, empno, ename,  sal from emp ;


SQL> select deptno, empno,  ename, sal, 
    row_number() over( order by sal desc) "번호" 
    from emp ;
    DEPTNO      EMPNO ENAME             SAL       번호
---------- ---------- ---------- ---------- ----------
        10       7839 KING             5000          1
        20       7902 FORD             3000          2
        20       7788 SCOTT            3000          3
        20       7566 JONES            2975          4
        30       7698 BLAKE            2850          5
        10       7782 CLARK            2450          6
        30       7499 ALLEN            1600          7
        30       7844 TURNER           1500          8
        10       7934 MILLER           1300          9
        30       7521 WARD             1250         10
        30       7654 MARTIN           1250         11
        20       7876 ADAMS            1100         12
        30       7900 JAMES             950         13
        20       7369 SMITH             800         14


★ 쉬어가는 코너 coalesce, nvl 복습   
★ --------------------------------------------------------------------------------------
  select  coalesce(null, '234', '10') from dual ;
  select empno,ename, sal, comm,  sal+comm  "합계" from  emp ; -- 단점
  select empno,ename, sal, nvl(comm,0) from  emp ;
  select empno,ename, sal, coalesce(comm,0) from  emp ;


drop  table  tab1 ;
create table  tab1(
  col1  integer,  
  col2  integer,  
  col3  integer
) ;

insert into tab1 values( 10, 20, null);
insert into tab1 values( 15, null, null);
insert into tab1 values( 60, 70, 50);
select * from tab1;
commit ;

col1    col2    col3
-----------------------
 10      20     null    ===>이순신
 15     null    null    ===>홍길동
 60      70      50     ===>김디비

 select sum(col2) from tab1 ;     -- 결과는 90
 비교 select empno,ename, sal, comm,  sal+comm  "합계" from  emp ; 

 select sum(col1 + col2 + col3) from tab1 ;   -- 바로 아래와 동일한 결과  180
SQL> select sum(col1+col2+col3) from tab1 ;
	SUM(COL1+COL2+COL3)
	-------------------
                180

SQL> select col1+col2+col3 from tab1 ;
	COL1+COL2+COL3
	--------------
           null
           null 
           180

 select sum(col2) from tab1 ;     -- 결과는 90
 select sum(col3) from tab1 ;     -- 결과는 
 select sum(col2 + col3) from tab1 ;    --  결과는 120 = 70 + 50 
 select sum(col2) + sum(col3) from tab1 ;    -- 결과는  140
 select sum(col1) + sum(col2) + sum(col3) from tab1 ;   -- 결과는  225


col1    col2    col3
-----------------------
 10      20     null    ===>이순신
 15     null    null    ===>홍길동
 60      70      50     ===>김디비



 select coalesce(col1,col2,col3)   from tab1;   -- 10 15 60 출력
	COALESCE(COL1,COL2,COL3)
	------------------------
                      10
                      15
                      60

 select sum(coalesce(col1,col2,col3))   from tab1;
	COALESCE(COL1,COL2,COL3)
	------------------------
                     85







-- with절  materialize과 inline view 2가지 동작방식을 합니다
-- materialize 방식 : 임시 테이블을 생성 후 with 절의 결과를 저장하며, 반복 호출 시 쿼리를 실행하지 않고 임시 테이블에 저장된 결과를 사용한다.
-- inline 방식 : 임시 테이블을 생성하지 않고 inline view 형태로 수행하며, 참조된 횟수만큼 반복적으로 쿼리를 실행한다.

SQL> col sal for 99999 ;  -- 기술하면 좋아요. 기술안하면 #####

SQL>  with emp_w1 as
  ( 
   select      /*+ 인라인 view = table역할 */
     deptno, sum(sal) as sal
    from emp group by deptno
  )
select a.deptno, b.dname, a.sal
from emp_w1  a ,  dept b where   a.deptno = b.deptno ;

    DEPTNO DNAME                               SAL
---------- ---------------------------- ----------
        10 ACCOUNTING                         8750
        20 RESEARCH                           10875
        30 SALES                               9400



clear screen ;
drop  table test ; 
create table test (
 key number(4) unique,
 name varchar2(10) not null,
 pay number(3)
);

select * from  test ;
commit ;



-- 오라클 제약조건  5가지 확인
-- 첫번째 not null 제약조건
 insert into test(key,pay) values(7700,  34 );  -- 에러발생
     ERROR at line 1:
    ORA-01400: cannot insert NULL into ("SYSTEM"."TEST"."NAME")

 insert into test(key,name) values(9900,  'gugu' );  -- 성공
 insert into test(key,name) values(7700,  'blue' );  -- 성공
 select * from  test ;
 commit ;

-- 두번쨰 unique constraint제약조건
 insert into test(key,name) values(9900,  'dan' );  -- 성공
   ERROR at line 1:
   ORA-00001: unique constraint (SYSTEM.SYS_C008727) violated


-- check, PK, FK 이미 확인 실습
-- 세번쨰 check  컬럼에 제약조건명시 
	drop table temp;
	create table temp (
          empno number(4) ,
          ename varchar2(10) ,
          sal number(7,2) ,
          comm number(5,1) ,
          constraint  temp_chk_sal  check( sal>comm) 
        );
   
     insert into  temp values( 2200, 'aa', 780, 12 );
     insert into  temp values( 3300, 'bb', 230, 45 );
     select * from  temp ;
     commit ;

     insert into  temp values( 5500, 'cc', 67, 120 ); -- 에러발생
	 ERROR at line 1:
	ORA-02290: check constraint (SYSTEM.TEMP_CHK_SAL) violated


SQL> show user ;
     -- USER is "SYSTEM"  

★ baewha유저 이미 생성했으니 참조만 하세요 
SQL> create user baewha
     identified by 1234
     default tablespace users
     temporary tablespace temp ;


user유저확인 명령어
SQL> select  username from  dba_users ;
SQL> select  username from  all_users ;

baewha유저 접속및 자원 권한부여
SQL> grant  connect  to baewha ;
SQL> grant  resource to  baewha ;
SQL> grant  dba  to  baewha ;



SQL>  connect baewhe/1234 ;
SQL> show user ;
SQL> desc guest ;
SQL> desc guestreply ;
SQL> select * from guest ;
      CODE NAME                 TITLE                            WDATE           HIT
---------- -------------------- -------------------------------- -------- ----------
      5500 aa                   note                             25/07/17          0
      9900 cc                   cake                             25/07/17          0
      7700 bb                   blue                             25/07/18         65

SQL> select * from guestreply ;
       NUM WRITER               CONTENT                                        CODE
---------- -------------------- ---------------------------------------- ----------
         1 rain                 rain                                           7700
         2 lee                  lee                                            5500
         3 snow                 snow                                           7700
         4 last                 last                                           7700
 
-- 네번쨰 FK
insert into guestreply values(guestreply_seq.nextval, 'young', 'young', 2200);
    ERROR at line 1:
    ORA-02291: integrity constraint (SYSTEM.FK_GUESTREPLY_GUEST) violated - parent key not found

-- 다섯번쨰 PK 에러이유가 unique같은종류
insert into guest values(5500, 'LG', 'LG', sysdate, 7);
   ERROR at line 1:
   ORA-00001: unique constraint (SYSTEM.SYS_C008727) violated

★ --------------------------------------------------------------------------------------
★ 서비스 확인하면 좋습니다
윈도우10 제어판-> 관리도구->  서비스 
 ㄴOracleServiceXE 시작됨 자동(오라클DB설치하면 자동실행됨)
 ㄴOracleXETNSListener 시작됨 자동(오라클DB설치하면 자동실행됨)

윈도우11 작업관리자 -> 서비스 
 ㄴOracleServiceXE 실행중(오라클DB설치하면 자동실행됨)
 ㄴOracleXETNSListener 실행중(오라클DB설치하면 자동실행됨)

★ --------------------------------------------------------------------------------------
참고 웹프로그램 할때는 포트번호를 변경하면 좋아요
SQL> select dbms_xdb.gethttpport() from dual
SQL> exec dbms_xdb.sethttpport(8888)
SQL> select dbms_xdb.gethttpport() from dual


jdk먼저설치, sqldeveloper설치
//추천  SQL Developer 다운로드 
//크롬웹브라우저 Oracel SQL Developer 19.2.1(64-1)
https://www.filehorse.com/download-oracle-sql-developer-64/43305/download/


//비추천 SQL Developer 다운로드 24.3.1 최신버젼 버젼
//SQL Developer 24.3.1 
 https://www.oracle.com/tools/downloads/sqldev-downloads.html
 https://www.oracle.com/database/sqldeveloper/technologies/download/




















