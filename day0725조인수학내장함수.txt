★ trunc 양수,음수는 무조건 소숫점 버리기  정수값추출
 select  trunc(7.4) from dual  ;     -- 정답 7 무조건버리기
 select  trunc(7.6) from dual  ;     -- 정답 7 무조건버리기
 select  trunc(-7.4) from dual ;     -- 정답 -7 무조건버리기
 select  trunc(-7.6) from dual ;     -- 정답 -7 무조건버리기


★ floor 양수일때 무조건버리기,  음수는  -1더하고 버리기
 select  floor(7.4) from dual ;      -- 정답 7 무조건버리기
 select  floor(7.6) from dual ;      -- 정답 7 무조건버리기
 select  floor(-7.4) from dual ;     -- 정답 -8 무조건버리기
 select  floor(-7.6) from dual ;     -- 정답 -8 무조건버리기

★ round함수 자동올림속성 적용 음수에도 적용
 select  round(7.4) from dual ;     -- 정답 7   소숫점 자릿수가 0~4일때 버리는 속성
 select  round(7.6) from dual ;     -- 정답 8   소숫점 자릿수가 5~9일때 올리는 속성
 select  round(-7.4) from dual ;    -- 정답 -7  소숫점 자릿수가 0~4일때 버리는 속성
 select  round(-7.6) from dual ;    -- 정답 -8  소숫점 자릿수가 5~9일때 올리는 속성

★ ceil함수 양수는 +1 , 음수는 음수값 그자체
 select  ceil(7.4) from dual ;      -- 정답 8  ceil함수는 양수일때 1을 더하는 느낌
 select  ceil(7.6) from dual ;      -- 정답 8  ceil함수는 양수일때 1을 더하는 느낌
 select  ceil(-7.4) from dual ;     -- 정답 -7  ceil함수는 음수일때 음수값만 출력
 select  ceil(-7.6) from dual ;     -- 정답 -7  ceil함수는 음수일때 음수값만 출력


SQL> select empno, ename, sal,  Lpad(sal, 10, '*') as 잔액 from emp ;
SQL> select * from emp where hiredate <= '81/09/28';
SQL> select * from emp where hiredate > '81/09/28';


drop  table guest  ;
create  table  guest (   
   code   number(4)  primary key ,
   name    varchar2(10) not null  ,
   title   varchar2(16) not null , 
   wdate   date  not null ,
   hit    number(3) 
 ); 

 SQL언어 - DDL(create,alter,drop)/ DML(insert,select,update,delete)

 delete from guest ;
 commit ;
 insert into guest values(5500, 'aa', 'note', sysdate,  23 ) ;
 insert into guest values(7700, 'bb', 'blue', sysdate,  65 ) ;
 insert into guest values(9900, 'cc', 'cake', sysdate,  31 ) ;


 select * from guest ;
 commit ;

-- guestreply테이블및 시퀀스 작성
 drop sequence  guestreply_seq ;  
 create sequence guestreply_seq ;
 commit ; 

alter table guestreply  drop constraint fk_guestreply_guest; 
drop table guestreply;  
create table guestreply (
  num number(4) not null primary key ,   
  writer varchar2(10) not null ,
  content varchar2(20)not null ,
  code number(4) not null ,
  constraint fk_guestreply_guest  foreign key(code) references guest(code) on delete cascade
);

참고SQL> alter table guestreply  drop constraint guest_code_fk; 
참고SQL> alter table guestreply  add  constraint guest_code_fk foreign key(code) references guest(code) on delete cascade ;

insert into guestreply values(guestreply_seq.nextval, 'rain','rain', 7700 );
insert into guestreply values(guestreply_seq.nextval, 'lee','lee', 5500 );    
insert into guestreply values(guestreply_seq.nextval, 'snow','snow', 7700);
insert into guestreply values(guestreply_seq.nextval, 'last','last', 7700 );

col writer for a10
col content for a10
select * from guestreply order by code  ;
commit ;

select * from guest order by code ;
insert into guestreply values(guestreply_seq.nextval, 'two','two', 2200 ); -- 에러발생
 에러발생이유 ORA-02291: integrity constraint (SYSTEM.FK_GUESTREPLY_GUEST) violated - parent key not found

insert into guest values(7700, 'naver', 'daum', sysdate,  21 ) ;
 에러발생이유 ORA-02291: pk키 중복 unique 에러 




sosi테이블 컬럼조작 - 타입변경, 컬럼추가, 컬럼변경 alter table sosi ~~~   
DDL - create, alter, drop 

   clear screen  ;
   drop table sosi  ;  
   create table sosi (
      code    number(4)     primary key ,  
      title   varchar2(16)  not null ,
      salary  number(3)  ,  
      birth   date  
   );

   desc sosi ;
   commit ;


insert into sosi(code,title,salary,birth) values(2200, 'blue',  78,  sysdate);
insert into sosi values(9900, 'kakao', 34, sysdate);
insert into sosi values(8800, 'snow',  29, sysdate);
insert into sosi values(7700, 'cake', 45,  sysdate ) ;
insert into sosi values(5500, 'rain', 90,  sysdate ) ;
select * from sosi ;
commit ;



데이타 정의어(DDL : Data Definition Language)
ㄴ create, alter, drop, rename, truncate 
★ --------------------------------------------------------------------------------------
SQL> desc sosi  ;
문제1]  hit숫자컬럼 추가 기본값은 0
  alter table sosi add(hit  int default 0) ;
  desc sosi ;
  select * from  sosi  ;


실습2] wdate날짜컬럼 추가  기본값 default sysdate
    alter table sosi add(wdate date default sysdate) ;
    desc sosi ;
    select * from  sosi  ;

set linesize 2000 ;
set pagesize 2000 ;
select * from sosi ;
desc sosi ;


실습3] title컬럼 varchar2(10) 크기변경 modify
  alter table sosi modify( title varchar2(10)) ;
  desc sosi ;
  select * from  sosi  ;

실습4] salary컬럼  pay필드변경
  alter table sosi rename column salary  to   pay ;
  desc sosi ;
  select * from  sosi  ;

실습5] birth 필드 삭제 
  alter table sosi drop column birth ;
  desc sosi ;
  select * from  sosi  ;


실습6] grade 필드 추가
  alter table sosi add(grade char(1) default 'F' ) ;
  desc sosi ;
  select * from  sosi  ;
  commit ;



-- groupy by ~~ 조건절 having 조건 
데이터를 관리하는 테이블생성 create,구조변경alter,drop 
데이터를 조작하는 dml(insert,select,update ~ where, delete~where)
select구문순서 필드명1,필드명2  from table이름  
 where 컬럼 조건절  group by grade 그룹조건having절 order by 컬럼

SQL> select grade, sum(pay)  "합계"  from sosi  group by grade order by grade ;
SQL> select grade, sum(pay)  "합계"  from sosi  
     group by grade  having sum(pay) > 90  order by grade ;
SQL> select grade , to_char(sum(pay), 'L99,999')  "합계"  from sosi group by grade
      having sum(pay)> 90 order by grade ;




★ 수작업으로 직접 기술 꼭 실습
 select grade, avg(pay) "평균"  from sosi group by grade ;
 select grade, avg(pay) "평균" from sosi group by grade order by grade;
 select grade, floor(avg(pay)) "평균" from sosi group by grade order by grade;
 select grade, trunc(avg(pay)) "평균" from sosi group by grade order by grade;
 select grade, round(avg(pay),2) "평균" from sosi group by grade order by grade;
 select grade, to_char(round(avg(pay),2) , '99,999.99')  "평균" from sosi group by grade order by grade;

 select grade, to_char(round(avg(pay),2) , '99,999.99')  "평균" from sosi
  group by grade having avg(pay) < 80  order by grade ;



-- 서브쿼리는 NL = Nested Loops (중첩 반복)  
-- join는 여러테이블 연결해서 원하는 데이터 추출목적
카티시안 곱(Cartesian Product)은 조인조건없이 cross join 또는 from절에 두 테이블을 나란히 기술하면 됩니다 
두 테이블의 모든 조합을 반환합니다.
실제 업무에서 의도된 경우가 아니면 잘 사용하지 않으며, 실수로 수행할 경우 성능 저하가 발생할 수 있습니다.
-- emp 테이블에 14행, dept 테이블에 4행이 있다면 → 14 × 4 = 56행 반환됩니다.
SQL> select  *  from emp  cross join dept  ;   -- 56row 반환
SQL> select  *  from emp, dept ;  -- 56row 반환

-- using절 , MSSQL server는 지원하지 않습니다 
SQL> select * from emp inner join  dept using(deptno) ;

-- natual join조인  공통필드 deptno출력하면에러발생  using절생략함 
정답 select empno, ename, job,  sal,  dname, loc from  emp  e  natural join  dept d ;
에러 select empno, ename, job,  sal,  dname, loc from  emp  e  natural join  dept d using(deptno) ;

-- non-equi이퀴조인 
SQL> select e.empno,  e.ename, e.job,  e.sal, s.grade || '등급'   "grade"
  from emp e, salgrade  s
  where e.sal between  s.losal  and  s.hisal ; 


-- self join 같은테이블에서 조인 
-- mgr필드, empno필드  비교
SQL> select  e.empno , e.ename , m.empno , m.ename  
 from  emp  e,   emp  m
 where  e.mgr = m.empno  order by  m.ename ;

-- full outer join 조인은 데이타 참조없는 부서코드까지 다 출력 
SQL> select  e.empno, e.ename, d.deptno,  d.dname, d.loc
 from  emp e  full outer join    dept  d
 on  e.deptno = d.deptno ; 

SQL> select  e.empno, e.ename, d.deptno,  d.dname, d.loc
from emp e,  dept  d
where  e.deptno(+) = d.deptno ;


SQL> select  e.empno, e.ename, d.deptno,  d.dname, d.loc
from emp e   right  outer  join   dept  d
on  e.deptno = d.deptno ; 

-------------------------------------------------------------------------------------------
-- 다시 조인 
-- join -  emp, dept, salgrade
-- equi이퀴조인 
 select empno, ename, dname, job ,  loc 
 from emp e, dept d  where  e.deptno = d.deptno ;

-- inner join 이퀴조인 
 select empno, ename, dname, job , loc 
 from emp e inner join  dept d  on  e.deptno = d.deptno ;

-- inner join ~ using  on절생략  공통필드 deptno출력하면에러발생 
 select empno, ename, dname, job , loc 
 from emp e inner join   dept d  using(deptno)  ;

-- natual join조인  공통필드 deptno출력하면에러발생  using절생략함 
 select empno, ename, job,  sal,  dname, loc  
   from  emp  e  natural join  dept d ;

-- non-equi이퀴조인 
 select e.empno,  e.ename, e.job,  e.sal, s.grade || '등급'   "grade"
  from emp e, salgrade  s
  where e.sal between  s.losal  and  s.hisal ; 


-- 이퀴,inner~,left~, where  e.deptno = d.deptno(+)  쿼리문결과
select  e.empno, e.ename, d.deptno,  d.dname, d.loc
from emp e,  dept  d
where  e.deptno = d.deptno ;

select  e.empno, e.ename, d.deptno,  d.dname, d.loc
from emp e  inner join  dept  d
on  e.deptno = d.deptno ;  


select  e.empno, e.ename, d.deptno,  d.dname, d.loc
from emp e   left  outer  join   dept  d
on  e.deptno = d.deptno ;  -- 아우터조인은 기본 연결필드순으로 자동소트 

select  e.empno, e.ename, d.deptno,  d.dname, d.loc
from emp e,  dept  d
where  e.deptno = d.deptno(+) ;  -- oracle조인은 기본 연결필드순으로 자동소트 


--  full outer join  & right outer join 같은결과
select  e.empno, e.ename, d.deptno,  d.dname, d.loc
from  emp e  full outer join    dept  d
on  e.deptno = d.deptno ;


-- self join
--  empno사번필드, mgr관리자필드  비교
 select  e.empno , e.ename , m.empno , m.ename  
 from  emp  e,   emp  m
 where  e.mgr = m.empno  order by  m.ename ;


-- natual join조인  공통필드 deptno출력하면에러발생  using절생략함 
 select empno, ename, job,  sal,  dname, loc  
   from  emp  e  natural join  dept d ;




-------------------------------------------------------------------------------------
-- 제약조건


clear screen ;
drop  table test ; 
create table test (
 key number(4) unique,
 name varchar2(10) not null,
 pay number(3)
);

select * from  test ;
commit ;



-- 오라클 제약조건  5가지 확인
-- 첫번째 not null 제약조건
 insert into test(key,pay) values(7700,  34 );  -- 에러발생
     ERROR at line 1:
    ORA-01400: cannot insert NULL into ("SYSTEM"."TEST"."NAME")

 insert into test(key,name) values(9900,  'gugu' );  -- 성공
 insert into test(key,name) values(7700,  'blue' );  -- 성공
 select * from  test ;
 commit ;

-- 두번쨰 unique constraint제약조건
 insert into test(key,name) values(9900,  'dan' );  -- 성공
   ERROR at line 1:
   ORA-00001: unique constraint (SYSTEM.SYS_C008727) violated


-- check, PK, FK 이미 확인 실습
-- 세번쨰 check  컬럼에 제약조건명시 
	drop table temp;
	create table temp (
          empno number(4) ,
          ename varchar2(10) ,
          sal number(7,2) ,
          comm number(5,1) ,
          constraint  temp_chk_sal  check( sal>comm) 
        );
   
     insert into  temp values( 2200, 'aa', 780, 12 );
     insert into  temp values( 3300, 'bb', 230, 45 );
     select * from  temp ;
     commit ;

     insert into  temp values( 5500, 'cc', 67, 120 ); -- 에러발생
	 ERROR at line 1:
	ORA-02290: check constraint (SYSTEM.TEMP_CHK_SAL) violated


SQL> show user ;
     -- USER is "SYSTEM"  

★ baewha유저 이미 생성했으니 참조만 하세요 
SQL> create user baewha
     identified by 1234
     default tablespace users
     temporary tablespace temp ;


user유저확인 명령어
SQL> select  username from  dba_users ;
SQL> select  username from  all_users ;

baewha유저 접속및 자원 권한부여
SQL> grant  connect  to baewha ;
SQL> grant  resource to  baewha ;
SQL> grant  dba  to  baewha ;



SQL>  connect baewhe/1234 ;
SQL> show user ;
SQL> desc guest ;
SQL> desc guestreply ;
SQL> select * from guest ;
      CODE NAME                 TITLE                            WDATE           HIT
---------- -------------------- -------------------------------- -------- ----------
      5500 aa                   note                             25/07/17          0
      9900 cc                   cake                             25/07/17          0
      7700 bb                   blue                             25/07/18         65

SQL> select * from guestreply ;
       NUM WRITER               CONTENT                                        CODE
---------- -------------------- ---------------------------------------- ----------
         1 rain                 rain                                           7700
         2 lee                  lee                                            5500
         3 snow                 snow                                           7700
         4 last                 last                                           7700
 
-- 네번쨰 FK
insert into guestreply values(guestreply_seq.nextval, 'young', 'young', 2200);
    ERROR at line 1:
    ORA-02291: integrity constraint (SYSTEM.FK_GUESTREPLY_GUEST) violated - parent key not found

-- 다섯번쨰 PK 에러이유가 unique같은종류
insert into guest values(5500, 'LG', 'LG', sysdate, 7);
   ERROR at line 1:
   ORA-00001: unique constraint (SYSTEM.SYS_C008727) violated



















